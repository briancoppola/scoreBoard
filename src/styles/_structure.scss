html,
body {
  margin: 0;
}
body {
  font-family: "Avenir Next", Avenir, Helvetica, sans-serif;
  font-size: 16px;
  position: relative;
}
header {
  text-align: center;
  position: absolute;
  width: 100%;
  display: none;
}
header h1 {
  display: flex;
  justify-content: space-between;
  width: 100%;
  margin: 0;
}
.stage {
  display: flex;
  justify-content: center;
}
.player {
  position: relative;
}
.scores {
  list-style-type: none;
  margin: 0;
  padding: 0;
}
// player name titles
.player .name {
  margin: 0;
  display: flex;
  font-size: 3.5em;
  width: inherit;
  height: 1.5em;
  transition: all 200ms ease;
  position: relative;
}
.player .name .title {
  position: fixed;
  display: flex;
  justify-content: center;
  align-items: center;
  width: inherit;
  height: inherit;
  margin: 0;
  transition: all 100ms ease; // on scroll back to top / restore
  z-index: 99;
  background: transparentize($stone, 0.3);
}
.player .name.squish {
  font-size: 2em;
}
.player .name.squish .title {
  width: inherit;
  height: 1.5em;
  transition: all 300ms ease; // on scroll down
}
.player .name .title::after {
  content: " ";
  position: absolute;
  top: 0.10em;
  left: calc(50% - 0.65em);
  width: 1.3em;
  height: 1.3em;
  background: transparentize(white, 0.2);
  z-index: -1;
  border-radius: 50%;
}
.player .name.squish .title::after {
  
  
}

// inputs wrapper
.input-wrap {
  display: flex;
  width: 100%;
  height: 2.8rem;
}
// input elements
.player .score-input {
  width: 50%;
  font-size: 2rem;
  text-align: center;
  margin: 0;
  padding: 0;
  border: 0;
}
.player button.add {
  width: 50%;
  border: 0;
  font-size: 2rem;
  margin: 0;
  padding: 0;
}

// list elements
.scores li {
  line-height: 2em;
  display: flex;
}
.delete,
.score,
.round {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 2em;
  text-align: center;
  font-size: 1.6rem;
}
.round {
  width: 2rem;
  flex: 0 1 auto;
}
.score {
  font-weight: bold;
  flex: 2 1 auto;
}
.delete {
  background: crimson;
  color: white;
  font-weight: bold;
  transition: all 200ms ease;
  overflow: hidden;
  width: 0;
}

.total {
  padding: 0.5rem;
  text-align: center;
  font-size: 2em;
}
.remove .delete {
  width: auto;
  flex-grow: 1;
}

// set player container width based on number of elements
@for $i from 1 through 4 {
  .player:first-child:nth-last-child(#{$i}),
  .player:first-child:nth-last-child(#{$i}) ~ .player {
    width: 100% / $i
  }
}